import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import styles from '../../../../styles/Home.module.css'
import DashboardNav from '../../../../components/DashboardNav'
import DeleteModal from '../../../../components/edit/DeleteModal'
import { useRouter } from "next/router";
import { useEffect, useState, useRef } from "react";
import { FlagSet, FlagSetTile } from "../../../../mirage/models";

export default function EditFlagset() {
    const router = useRouter()
    
    const [selectedFlag, setSelectedFlag] = useState<FlagSet | undefined>(undefined);
    const [isDeleteModalVisible, setIsDeleteModalVisible] = useState<boolean>(false);
    const [hasFlagsetQuestions, setHasFlagsetQuestions] = useState<boolean>(false);
    const [flagsetQuestions, setFlagsetQuestions] = useState<[]>([]);

    const [isAddingTile, setIsAddingTile] = useState<boolean>(false);
    const [isFlagConfirmed, setIsFlagConfirmed] = useState<boolean>(false);
    const [isQuestionConfirmed, setIsQuestionConfirmed] = useState<boolean>(false);
    
    const deleteModal = useRef<HTMLDialogElement>(null)

    async function getSelectedFlag(flagId: string | string[] | undefined) {
        try {
            await fetch(`/api/flags/flagsets/${flagId}`)
            .then((res) => res.json())
            .then((json) => {
                setSelectedFlag(json.flagSet);
                if(json.flagSet.flagSetTile.length > 0) {
                    setHasFlagsetQuestions(true);
                }
                setFlagsetQuestions(json.flagSet.flagSetTile);
            })
        } catch(e) {
            console.log(e);
        }
    }

    function updateFlagDetails() {
        // TODO: function for patch 
        // or put to update this ID, and call 
        // the updated one, and setSelectedFlag
    }

    function openDeleteModal() {
        deleteModal?.current?.showModal();
    }

    function deleteFlagSet() {
        fetch(`/api/flagsets/delete/${selectedFlag?.id}`, {method: 'DELETE'});
        router.push('/teachers/flags');
    }

    function cancelDelete() {
        deleteModal?.current?.close();
    }

    useEffect(() => {
        if (router.isReady) {
            getSelectedFlag(router.query.id);
        }
    }, [router.isReady, router.query.id])

    return (
        <>
            <div>
                <Head>
                    <title>Create Flags</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>
                <header>
                    <nav className={`${styles.primary_nav}`}>
                        <Link href="/teachers/flags/#"><a>Profile</a></Link>
                        <Link href="/"><a>Log Out</a></Link>
                    </nav>
                </header>
                <main className={`${styles.dashboard}`}>
                    {/* {isDeleteModalVisible && (
                        <DeleteModal id={selectedFlag?.id}
                        ></DeleteModal>
                    )} */}
                    <dialog
                        ref={deleteModal}
                    >
                        <div style={{marginBottom: '1rem',}}>
                            <p style={{textAlign: 'center', fontWeight: '700'}}>Warning!</p>
                            <p>You are about to delete your flag set: {selectedFlag?.title}.</p>
                            <p>Once you do, you can&apos;t get it back.</p>
                        </div>
                        <p style={{marginBottom: '1rem',}}>Are you sure you want to delete this set?</p>
                        <div style={{display: 'flex', justifyContent: 'center', gap: '1rem',}}>
                            <button className={styles.delete_button}onClick={deleteFlagSet}>Delete</button>
                            <button className={styles.button} onClick={cancelDelete}>Cancel</button>
                        </div>
                    </dialog>
                    <div className={`${styles.dashboard_content_wrapper}`}>
                        <DashboardNav></DashboardNav>
                        {!selectedFlag && (
                        <div style={{ padding: '1rem', width: 'min(100%, 1200px)', minHeight: '70vh'}}>
                            <div style={{minHeight: '70vh', padding: '1rem', background: 'white'}}>
                                <h1>Loading...</h1>
                            </div>
                        </div>
                        )}
                        <div style={{ padding: '1rem', width: 'min(100%, 1200px)', minHeight: '70vh'}}>
                            <div style={{minHeight: '70vh', padding: '1rem', background: 'white'}}>
                        {selectedFlag && (
                            <>
                                <div className={`${styles.flex} ${styles.flex_between}`}>
                                    <h1>{selectedFlag.title}</h1>
                                    {/* <button 
                                        className={styles.delete_button}
                                        onClick={otherOpenDeleteModal}
                                    >Modal Delete</button> */}
                                    <button 
                                        className={styles.delete_button}
                                        onClick={openDeleteModal}
                                    >Delete</button>
                                </div>
                                <hr></hr>
                                <section>
                                    <table>
                                        <thead>
                                            <tr>
                                                <th></th>
                                                <th>Current</th>
                                                <th>New</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td>Level</td>
                                                <td>
                                                <input 
                                                style={{textAlign: 'right',}}
                                                placeholder={selectedFlag.level ? selectedFlag.level : '1'}></input>
                                                </td>
                                                <td>
                                                <input 
                                                style={{textAlign: 'right',}}
                                                type='number'></input>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>Week</td>
                                                <td>
                                                <input 
                                                style={{textAlign: 'right',}}
                                                placeholder={selectedFlag.week ? selectedFlag.week : '1'}></input>
                                                </td>
                                                <td>
                                                <input 
                                                style={{textAlign: 'right',}}
                                                type='number'></input>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>Date</td>
                                                <td>
                                                <input 
                                                style={{textAlign: 'right',}}
                                                placeholder={selectedFlag.date}></input>
                                                </td>
                                                <td>
                                                <input 
                                                style={{textAlign: 'right',}}
                                                type='date'></input>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <button onClick={updateFlagDetails}>Save</button>
                                </section>
                                </>
                        )}
                        <button onClick={() => {setIsAddingTile(true)}}>+</button>
                        {isAddingTile && (
                            <article className={styles.add_new_question_container}>
                                <div style={{position: 'relative'}}>

                                <p style={{textAlign: 'center'}}>Welcome to adding a new question</p>
                                <button style={{position: 'absolute', right: '0', top: '0'}}onClick={() => {
                                    setIsAddingTile(false);
                                    setIsFlagConfirmed(false);
                                    setIsQuestionConfirmed(false);
                                }}>
                                    Cancel
                                </button>
                                </div>
                                {!isFlagConfirmed && (
                                    <div className={`${styles.add_new_question_step_container}`}>
                                        <h3 style={{textAlign: 'center'}}>Choose flag</h3>
                                        <div>box of flags</div>
                                        <div style={{display: 'flex', justifyContent: 'center'}}>

                                        <button onClick={() => {setIsFlagConfirmed(true)}}>Next Step</button>
                                        </div>
                                    </div>
                                )}
                                {isFlagConfirmed && !isQuestionConfirmed && (
                                    <div className={`${styles.add_new_question_step_container}`}>
                                        <h3 style={{textAlign: 'center'}}>Make Question</h3>
                                        <p>Question</p>
                                        <p>Answer</p>
                                        <p>Wrong</p>
                                        <p>Wrong</p>
                                        <p>Wrong</p>
                                        <div style={{display: 'flex', justifyContent: 'center'}}>

                                        <button onClick={() => {setIsFlagConfirmed(false)}}>Back</button>
                                        <button onClick={() => {setIsQuestionConfirmed(true)}}>Next Step</button>
                                        </div>
                                    </div>
                                )}
                                {isFlagConfirmed && isQuestionConfirmed && (
                                    <div className={`${styles.add_new_question_step_container}`}>
                                        <h3 style={{textAlign: 'center'}}>Review and Confirm</h3>
                                        <p>Your flag is Canada</p>
                                        <p>Question details</p>
                                        <div style={{display: 'flex', justifyContent: 'center'}}>

                                        <button onClick={() => {setIsQuestionConfirmed(false)}}>Back</button>
                                        <button onClick={() => {
                                            setIsFlagConfirmed(false);
                                            setIsQuestionConfirmed(false);
                                            setIsAddingTile(false)
                                            }}>Save</button>
                                        </div>
                                    </div>
                                )}
                            </article>
                        )}
                        {hasFlagsetQuestions? (
                            flagsetQuestions.map((question: FlagSetTile) => (
                                <article 
                                    key={`fs-q-${question.id}`} 
                                    className={styles.question_front_back_container}
                                >
                                    <div style={{ position: 'relative', width: '30%'}}>
                                        <div style={{ position: 'relative'}}>
                                            <h3 style={{ textAlign: 'center', fontSize: '24px', }}>Front</h3>
                                            <button                                                     
                                                onClick={() => {console.log('You clicked edit front side')}} 
                                                className={`material-symbols-outlined ${styles.edit_flagset_info_button}`}
                                            >
                                                <span>edit</span>
                                            </button>
                                        </div>
                                        <div>
                                            <p>{question.country.name}</p>
                                            <div style={{ position: 'relative', width: '100%', aspectRatio: '4 / 3'}}>
                                                <Image
                                                    alt={`A picture of the ${question.country.name} flag`}
                                                    src={question.country.flag}
                                                    layout='fill'
                                                    objectFit="cover"
                                                ></Image>
                                            </div>
                                        </div>
                                    </div>
                                    <div style={{ width: '70%'}}>
                                        <div style={{ position: 'relative'}}>
                                            <h3 style={{ textAlign: 'center', fontSize: '24px', }}>Back</h3>
                                            <button                                                     
                                                onClick={() => {console.log('You clicked edit back side')}} 
                                                className={`material-symbols-outlined ${styles.edit_flagset_info_button}`}
                                            >
                                                <span>edit</span>
                                            </button>
                                        </div>
                                        <p>Question: {question.question.question}</p>
                                        {question.question.options && (
                                            <>
                                                <p>Options:</p>
                                                <ul>
                                                    <li>Answer: {question.question.answer}</li>
                                                        {question.question.options.map((option, index) => (
                                                            <li key={`option${index}-${option.id}`}>Option {index+1}: {option.text}</li>
                                                        ))}
                                                </ul>
                                            </>
                                        )}
                                    </div>
                                </article>
                            ))
                        ) : (
                            <p>False</p>
                        )}
                            </div>
                        </div>
                    </div>
                </main>
            </div>
        </>
    );
}