import Head from "next/head";
import Link from "next/link";
import styles from '../../../../styles/Home.module.css'
import DashboardNav from '../../../../components/DashboardNav'
import { useRouter } from "next/router";
import { useEffect, useState, useRef } from "react";
import { FlagSet, FlagSetTile } from "../../../../mirage/models";
import AddNewTile from "../../../../components/AddNewTile";
import TileFrontAndBack from "../../../../components/TileFrontAndBack";

export default function EditFlagset() {
    const router = useRouter()
    
    const [selectedFlag, setSelectedFlag] = useState<FlagSet | undefined>(undefined);
    const [flagSetTiles, setFlagSetTiles] = useState<FlagSetTile[]>([]);
    const [loading, setLoading] = useState<boolean>(false);

    const [isAddingTile, setIsAddingTile] = useState<boolean>(false);
    
    const deleteModal = useRef<HTMLDialogElement>(null)

    async function getSelectedFlag(flagId: string | string[] | undefined) {
        setLoading(true);
        try {
            await fetch(`/api/flags/flagsets/${flagId}`)
            .then((res) => res.json())
            .then((json) => {
                setSelectedFlag(json.flagSet);
                setFlagSetTiles(json.flagSet.flagSetTile);
                setLoading(false);
            })
        } catch(e) {
            console.log(e);
        }
    }

    function updateFlagDetails() {
        // TODO: function for patch 
        // or put to update this ID, and call 
        // the updated one, and setSelectedFlag
    }

    function openDeleteModal() {
        deleteModal?.current?.showModal();
    }

    function deleteFlagSet() {
        fetch(`/api/flagsets/delete/${selectedFlag?.id}`, {method: 'DELETE'});
        router.push('/teachers/flags');
    }

    function handleDeleteTile(id: string) {
        fetch(`/api/flagSet/tile/${id}/delete`, {method: 'DELETE'})
        const filteredTiles = flagSetTiles.filter((tile: FlagSetTile) => {
            console.log('logging the tiles: ', tile)
            return tile.id !== id;
        })
        setFlagSetTiles(filteredTiles);
        console.log(id);
        console.log('You are deleting this tile')
    }

    function cancelDelete() {
        deleteModal?.current?.close();
    }

    useEffect(() => {
        if (router.isReady) {
            getSelectedFlag(router.query.id);
        }
    }, [router.isReady, router.query.id])

    return (
        <>
            {loading ? (
                <div style={{minHeight: '100vh', display: 'grid', gridTemplateColumns: '1/2', gridTemplateRows: '1/2', placeContent: 'center'}}>
                    <p style={{fontSize: '5rem'}}>Page loading...</p>
                </div>
            ) 
            : 
            (
                <div>
                    <Head>
                        <title>Create Flags</title>
                        <meta name="description" content="Generated by create next app" />
                        <link rel="icon" href="/favicon.ico" />
                    </Head>
                    <header>
                        <nav className={`${styles.primary_nav}`}>
                            <Link href="/teachers/flags/#"><a>Profile</a></Link>
                            <Link href="/"><a>Log Out</a></Link>
                        </nav>
                    </header>
                    <main className={`${styles.dashboard}`}>
                        <dialog
                            ref={deleteModal}
                        >
                            <div style={{marginBottom: '1rem',}}>
                                <p style={{textAlign: 'center', fontWeight: '700'}}>Warning!</p>
                                <p>You are about to delete your flag set: {selectedFlag?.title}.</p>
                                <p>Once you do, you can&apos;t get it back.</p>
                            </div>
                            <p style={{marginBottom: '1rem',}}>Are you sure you want to delete this set?</p>
                            <div style={{display: 'flex', justifyContent: 'center', gap: '1rem',}}>
                                <button className={styles.delete_button}onClick={deleteFlagSet}>Delete</button>
                                <button className={styles.button} onClick={cancelDelete}>Cancel</button>
                            </div>
                        </dialog>
                        <div className={`${styles.dashboard_content_wrapper}`}>
                            <DashboardNav></DashboardNav>
                            {!selectedFlag && (
                            <div style={{ padding: '1rem', width: 'min(100%, 1200px)', minHeight: '70vh'}}>
                                <div style={{minHeight: '70vh', padding: '1rem', background: 'white'}}>
                                    <h1>Loading...</h1>
                                </div>
                            </div>
                            )}
                            <div style={{ padding: '1rem', width: 'min(100%, 1200px)', minHeight: '70vh'}}>
                                <div style={{minHeight: '70vh', padding: '1rem', background: 'white'}}>
                            {selectedFlag && (
                                <>
                                    <div className={`${styles.flex} ${styles.flex_between}`}>
                                        <h1>{selectedFlag.title}</h1>
                                        <button 
                                            className={styles.delete_button}
                                            onClick={openDeleteModal}
                                        >Delete</button>
                                    </div>
                                    <hr></hr>
                                    <section>
                                        <table>
                                            <thead>
                                                <tr>
                                                    <th></th>
                                                    <th>Current</th>
                                                    <th>New</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td>Level</td>
                                                    <td>
                                                    <input 
                                                    style={{textAlign: 'right',}}
                                                    placeholder={selectedFlag.level ? selectedFlag.level : '1'}></input>
                                                    </td>
                                                    <td>
                                                    <input 
                                                    style={{textAlign: 'right',}}
                                                    type='number'></input>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>Week</td>
                                                    <td>
                                                    <input 
                                                    style={{textAlign: 'right',}}
                                                    placeholder={selectedFlag.week ? selectedFlag.week : '1'}></input>
                                                    </td>
                                                    <td>
                                                    <input 
                                                    style={{textAlign: 'right',}}
                                                    type='number'></input>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>Date</td>
                                                    <td>
                                                    <input 
                                                    style={{textAlign: 'right',}}
                                                    placeholder={selectedFlag.date}></input>
                                                    </td>
                                                    <td>
                                                    <input 
                                                    style={{textAlign: 'right',}}
                                                    type='date'></input>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <button onClick={updateFlagDetails}>Save</button>
                                    </section>
                                    </>
                            )}
                            <button onClick={() => {setIsAddingTile(true)}}>+</button>
                            {isAddingTile ? (
                                <AddNewTile
                                    setIsAddingTile={setIsAddingTile}
                                    flagSet={selectedFlag}
                                    setNewFlagSet={setSelectedFlag}
                                    setFlagSetTiles={setFlagSetTiles}
                                ></AddNewTile>
                            ) : (null)}
                            {flagSetTiles.length > 0 ? (
                                flagSetTiles.map((question: FlagSetTile) => (
                                    <TileFrontAndBack 
                                        key={`fs-q-${question.id}`}
                                        tile={question}
                                        handleDeleteTile={handleDeleteTile}
                                    ></TileFrontAndBack>
                                ))
                            ) : (
                                <p>False</p>
                            )}
                                </div>
                            </div>
                        </div>
                    </main>
                </div>
            )}
        </>
    );
}